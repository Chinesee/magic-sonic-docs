(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{214:function(t,s,a){"use strict";a.r(s);var e=a(6),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",[t._v("如何将 Vue 应用部署到 GitHub Pages")]),t._v(" "),a("p",[t._v("当你完成了一个只有静态内容的网站如个人博客或网页模板，你想发布到网络上供别人访问。通常你需要部署到一个 Http 服务器上，比如阿里云、腾讯云等市场上各种云服务器，然而单独维护一个服务器付出的精力和金钱是巨大的，而 GitHub Pages 完全能胜任这项工作。")]),t._v(" "),a("h2",{attrs:{id:"为什么选择-github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择-github-pages"}},[t._v("#")]),t._v(" 为什么选择 GitHub Pages")]),t._v(" "),a("p",[t._v("作为当下最流行的静态站点托管平台，GitHub Pages 拥有以下让人交口称誉的理由：")]),t._v(" "),a("ul",[a("li",[t._v("免费使用，可以帮你省下昂贵的云服务器费用")]),t._v(" "),a("li",[t._v("无需与服务器打交道，完全简单的操作步骤")]),t._v(" "),a("li",[t._v("可以为你自己的网站绑定自定义域名")]),t._v(" "),a("li",[t._v("直接从你的 GitHub 仓库托管，只需编辑、推送，你的更改就会立即生效")])]),t._v(" "),a("h2",{attrs:{id:"发布你的网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布你的网站"}},[t._v("#")]),t._v(" 发布你的网站")]),t._v(" "),a("p",[t._v("已经准备好开始了吗？如果你对 GitHub Pages 的操作还不熟悉，那么请跟随以下步骤来逐步完成你的网站部署。")]),t._v(" "),a("h3",{attrs:{id:"将构建文件发布到-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将构建文件发布到-github"}},[t._v("#")]),t._v(" 将构建文件发布到 GitHub")]),t._v(" "),a("p",[t._v("这里的构建文件指的是运行 "),a("code",[t._v("npm run build")]),t._v(" 生成的 "),a("code",[t._v("dist")]),t._v(" 目录，我们要托管到 GitHub Pages 的就是这个目录下的内容。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("在 build 之前，请将 publicPath 设为 "),a("code",[t._v("/[仓库名称]/")]),t._v("，否则 GitHub Pages 将无法正常找到资源文件。")])]),t._v(" "),a("p",[t._v("为了不污染主分支的文件结构，我们推荐在远程仓库新建一个分支专门用来推送 "),a("code",[t._v("dist")]),t._v(" 目录，并将这个分支命名为 "),a("code",[t._v("gh-pages")]),t._v("。为了做到这一点，我们使用了 "),a("a",{attrs:{href:"https://github.com/L33T-KR3W/push-dir",target:"_blank",rel:"noopener noreferrer"}},[t._v("push-dir"),a("OutboundLink")],1),t._v("，它能帮助我们将某个目录的内容推送到远程分支。")]),t._v(" "),a("p",[t._v("首先在项目内安装这个依赖:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" push-dir --save-dev\n")])])]),a("p",[t._v("接着我们在 "),a("code",[t._v("package.json")]),t._v(" 中添加一条新的脚本命令：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deploy"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"push-dir --dir=dist --branch=gh-pages --cleanup"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这个命令的意思是将 "),a("code",[t._v("dist")]),t._v(" 目录推送到 "),a("code",[t._v("gh-pages")]),t._v("，完了之后删除本地对应的分支。运行 "),a("code",[t._v("npm run deploy")]),t._v(" 成功后，你应该能在 GitHub 上看到这个分支的内容了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/chinesee/images/raw/master/blog/1.png",alt:"gh-pages 分支内容"}})]),t._v(" "),a("h3",{attrs:{id:"设置-github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-github-pages"}},[t._v("#")]),t._v(" 设置 GitHub Pages")]),t._v(" "),a("p",[t._v("进入我们项目所在的仓库设置里面，找到 "),a("code",[t._v("Options -> GitHub Pages")]),t._v("，将 GitHub Pages 构建在 "),a("code",[t._v("gh-pages")]),t._v(" 上，像这样设置：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/chinesee/images/raw/master/blog/2.png",alt:"GitHub Pages 设置"}})]),t._v(" "),a("p",[t._v("设置成功后，你的网站就能通过 "),a("code",[t._v("https://[GitHub 账号名].github.io/[仓库名]/")]),t._v(" 这样的格式访问了。通常到这一步就足够了，不过如果你希望为你的网站自定义域名，那么请看下一节的内容。")]),t._v(" "),a("h3",{attrs:{id:"自定义域名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义域名"}},[t._v("#")]),t._v(" 自定义域名")]),t._v(" "),a("p",[t._v("假设你已经拥有了自己的域名，那么你可以对你的 GitHub Pages 网站使用子域名，子域名配置是通过 DNS 提供商使用 CNAME 记录配置的，即子域名可以通过添加一个 CNAME 类型的主机记录，记录值为 "),a("code",[t._v("[GitHub 账号].github.io")]),t._v(" 设置。比如本站的父级域名是 "),a("code",[t._v("leoku.top")]),t._v("，子域名为 "),a("code",[t._v("docs")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/chinesee/images/raw/master/blog/3.png",alt:"GitHub Pages 设置"}})]),t._v(" "),a("p",[t._v("完成上面的操作后，在 "),a("code",[t._v("public")]),t._v(" 文件夹下创建一个名为 "),a("code",[t._v("CNAME")]),t._v(" 的文件，然后在里面写入你的域名，比如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("venus.leoku.top\n")])])]),a("p",[t._v("接下来就是 "),a("code",[t._v("npm run build")]),t._v(" 和 "),a("code",[t._v("npm run deploy")]),t._v(" 的步骤了，最后再在仓库设置中填入自定义域名就完成所有操作了。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("使用自定义域名的话就不用再设置 publicPath 了，保持默认即可。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/chinesee/images/raw/master/blog/4.png",alt:"GitHub Pages 设置"}})])])}),[],!1,null,null,null);s.default=v.exports}}]);